name: Build

on: push

jobs:

  checkout:
    name: Checkout
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

  build:
    name: Build Maroon
    runs-on: self-hosted
    needs: checkout
    steps:

      # cache      
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/unity/Library
          key: Library-${{ hashFiles('${{ github.workspace }}/unity/Assets/**', '${{ github.workspace }}/unity/Packages/**', '${{ github.workspace }}/unity/ProjectSettings/**') }}
          restore-keys: |
            Library-
  
      # build
      - name: Build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          #targetPlatform: StandaloneWindows
          buildMethod: Maroon.Build.BuildPlayer.ActionsBuild
          customParameters: -maroonBuildPath /github/workspace/build
          projectPath: ./unity
          buildsPath: /github/workspace/build


  # https://github.com/actions/runner/issues/434
  # restore ownership of files
  # fix-ownership:
  #   name: Fix file ownership
  #   runs-on: self-hosted
  #   # run always, even if previous steps failed
  #   if: ${{ always() }}
  #   needs: build
  #   steps:
      
  #     # first we need the original uid
  #     - name: Get Actions user id
  #       id: get_uid
  #       run: |
  #         actions_user_id=`id -u $USER`
  #         echo $actions_user_id
  #         echo "uid=$actions_user_id" >> $GITHUB_OUTPUT

  #     # then we can reset the ownership of the files
  #     - name: Correct Ownership in GITHUB_WORKSPACE directory
  #       uses: derekroberts/reset-workspace-ownership-action@bug/workspaceSpaces
  #       # use fork of original action, due to bug (https://github.com/peter-murray/reset-workspace-ownership-action/issues/5)
  #       #uses: peter-murray/reset-workspace-ownership-action@v1
  #       with:
  #         user_id: ${{ steps.get_uid.outputs.uid }}
    
  upload-artifacts:
    name: Upload artifacts
    runs-on: self-hosted
    needs: build
    steps:
      - name: Compress build folder
        run: zip -r build.zip build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MaroonBuild
          path: ${{ github.workspace }}/build.zip
          if-no-files-found: error
    
  cleanup:
    name: Cleanup
    runs-on: self-hosted
    needs: upload-artifacts
    if: ${{ always() }}
    steps:
      - name: Cleanup
        uses: AutoModality/action-clean@v1
          
          
