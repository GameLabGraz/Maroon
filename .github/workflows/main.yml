name: Build

on: push

jobs:

  checkout:
    name: Checkout
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

  test:
    name: Test
    runs-on: self-hosted
    needs: checkout
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - ./unity
        testMode:
          - playmode
          - editmode
    steps:

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/unity/Library
          key: Library-${{ hashFiles('${{ github.workspace }}/unity/Assets/**', '${{ github.workspace }}/unity/Packages/**', '${{ github.workspace }}/unity/ProjectSettings/**') }}
          restore-keys: |
            Library-
      
      - name: Test
        uses: game-ci/unity-test-runner@v2
        id: tests
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts

      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}

  build:
    name: Build Maroon
    runs-on: self-hosted
    needs: [checkout, test]
    steps:

      # # cache      
      # - name: Cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ github.workspace }}/unity/Library
      #     key: Library-${{ hashFiles('${{ github.workspace }}/unity/Assets/**', '${{ github.workspace }}/unity/Packages/**', '${{ github.workspace }}/unity/ProjectSettings/**') }}
      #     restore-keys: |
      #       Library-
  
      # build
      - name: Build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          #targetPlatform: StandaloneWindows
          buildMethod: Maroon.Build.BuildPlayer.ActionsBuild
          customParameters: -maroonBuildPath /github/workspace/build
          projectPath: ./unity
          buildsPath: /github/workspace/build
    
  upload-artifacts:
    name: Upload artifacts
    runs-on: self-hosted
    needs: build
    steps:
      - name: Compress build folder
        run: zip -r build.zip build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MaroonBuild
          path: ${{ github.workspace }}/build.zip
          if-no-files-found: error
    
  cleanup:
    name: Cleanup
    runs-on: self-hosted
    needs: upload-artifacts
    if: ${{ always() }}
    steps:
      - name: Cleanup
        uses: AutoModality/action-clean@v1
          
          
