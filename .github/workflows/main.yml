name: Build

on: push

jobs:

  checkout:
    name: Checkout
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
 
  build:
    name: Build Maroon
    runs-on: self-hosted
    needs: checkout

    steps:
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/unity/Library
          key: Library-${{ hashFiles('${{ github.workspace }}/unity/Assets/**', '${{ github.workspace }}/unity/Packages/**', '${{ github.workspace }}/unity/ProjectSettings/**') }}
          restore-keys: |
            Library-
  
      # build
      - name: Build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildMethod: Maroon.Build.BuildPlayer.ActionsBuild
          customParameters: -maroonBuildPath /github/workspace/build
          projectPath: ./unity
          buildsPath: /github/workspace/build
    

  test:
    name: Test
    runs-on: self-hosted
    needs: build
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - ./unity
        testMode:
          - playmode
          - editmode
    steps:
      - name: Test
        uses: game-ci/unity-test-runner@v2
        id: tests
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ./test/${{ matrix.testMode }}-artifacts
  

  upload-artifacts:
    name: Upload artifacts
    runs-on: self-hosted
    # we want to upload artifacts even if the tests fail
    # if both build and test fail, we don't want to upload
    needs: [build, test]
    if: ${{ success() || (needs.build.result == 'success' || needs.test.result == 'success') }}
    steps:
      - name: Compress build folder
        run: zip -r build.zip build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MaroonArtifacts
          path: |
            ${{ github.workspace }}/build.zip
            ${{ github.workspace }}/test
          if-no-files-found: error


  
  deploy: 
    name: Deploy to Steam
    runs-on: self-hosted
    needs: [build, test, upload-artifacts]
    # for now, also proceed, even if tests fail
    if: ${{ success() || (needs.build.result == 'success' || needs.test.result == 'success') }}
    steps:
      - name: Upload to Steam
        uses: game-ci/steam-deploy@v2
        with:
          username: ${{ secrets.STEAM_USERNAME }}
          password: ${{ secrets.STEAM_PASSWORD }}
          configVdf: ${{ secrets.STEAM_CONFIG_VDF}}
          ssfnFileName: ${{ secrets.STEAM_SSFN_FILE_NAME }}
          ssfnFileContents: ${{ secrets.STEAM_SSFN_FILE_CONTENTS }}
          appId: ${{ secrets.STEAM_APP_ID }}
          buildDescription: CI/CD {{github.sha}}
          rootPath: build
          depot1Path: .
          releaseBranch: development



  cleanup:
    name: Cleanup
    runs-on: self-hosted
    needs: [upload-artifacts, deploy]
    if: ${{ always() }}
    steps:
      - name: Cleanup
        uses: AutoModality/action-clean@v1
          
          
