using UnityEngine;

namespace Maroon.GlobalEntities
{
    public class PlayerManager : MonoBehaviour,  GlobalEntity
    {
        // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // Fields

        // Singleton instance
        private static PlayerManager _instance = null;

        // Action maps, actions, and bindings generated by the Unity input system package
        private MaroonInputActions _maroonInputActions = null;

        // Local player ID that can be assigned to a new player
        private int _nextLocalPlayerID = 1;

        // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // Properties, Getters and Setters

        // -------------------------------------------------------------------------------------------------------------
        // Singleton

        /// <summary>
        ///     The PlayerManager instance
        /// </summary>
        public static PlayerManager Instance => PlayerManager._instance;

        MonoBehaviour GlobalEntity.Instance => Instance;

        /// <summary>
        ///     Action maps, actions, and bindings generated by the Unity input system package
        /// </summary>
        public MaroonInputActions MaroonInputActions => this._maroonInputActions;

        // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // Methods

        // -------------------------------------------------------------------------------------------------------------
        // Initialization

        /// <summary>
        ///     Called by Unity. Initializes singleton instance and DontDestroyOnLoad (stays active on new scene load).
        ///     Initializes the input actions.
        /// </summary>
        private void Awake()
        {
            // Singleton
            if(PlayerManager._instance == null)
            {
                PlayerManager._instance = this;
            }
            else if(PlayerManager._instance != this)
            {
                DestroyImmediate(this.gameObject);
                return;
            }

            // Keep alive
            DontDestroyOnLoad(this.gameObject);

            // Initialize input actions
            this._maroonInputActions = new MaroonInputActions();

            Debug.Log("SET INPUT ACTIONS");
        }

        /// <summary>
        ///     Called by Unity. Enables Unity input system package.
        /// </summary>
        private void OnEnable()
        {
            // Enable the input system
            _maroonInputActions.Enable();
        }

        /// <summary>
        ///     Called by Unity. Disables Unity input system package.
        /// </summary>
        private void OnDisable()
        {
            // Disable the input system
            _maroonInputActions.Disable();
        }

        // -------------------------------------------------------------------------------------------------------------
        // Player creation
        private int getNewPlayerID()
        {
            // Return value and increment field
            int newPlayerID = _nextLocalPlayerID;
            _nextLocalPlayerID += 1;
            return newPlayerID;
        }
    }
}